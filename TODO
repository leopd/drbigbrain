** DEVELOPMENT NOTES, TODO ROADMAP:

TODO...
*Most important
-warn user when the deck is running short of unseen cards and time for more cards
-Show me how far I've gotten on each lesson.  (# in each state)
-use static media files
-move get_model, save_model into deckstate class
-some integration tests


* UX flow
-guest login
-add "about" page
-link to definitions
-note about what happens to new cards and the active deck on lesson picker view
-explain how to install chinese fonts
-warn user if they try to leave with unsubmitted data
-"Submitting..." status bar shouldn't re-arrange other page elements.
-UI candy to show the new card gradually over 0.3s or so.  too jarring now. 

*code cleanup
-studyui only shows buttons that current model is configured for
-encapsulation of login/logout from root urls.py
-break studyui.js into classes
-create CardCache class in studyui
-Use a proper datestamp when the impression was made, rather than when it's committed to db
-Remove dojo debug console from Android G1 browser


*new deck manager
-reset option per card (revisit does that?)
-support multiple decks and switching between them
-option to load more than 30 recent cards
-create a new kind of deck -- quiz


*better model
-history looks up actual impressions
-model uses timer
-limit timer to 5 minutes.  then ask "you still there?"
-split learning (# of cards to wait) and review (# minutes to wait)
-state machine logic can give hints about how far back
-Ensure that two cards don't show up right next to each other again.  If they're going back in the deck with similar soonest values, then +/- 1.5 to it to make sure there's something else in between
-Show the user the counter timer.
-Stop the timer when it passes 2 minutes.  Post an alert.


*optimize
-move studyui.html to static media
-move .js and .css out of studyui.
-preload dojo, css on homepage




*More Content
-amharic alphabet
-Organize lessons into a tree
-import cedict
-audio support
-custom widget to choose concepts in a lessonseq
-lesson grouping into topics
-generalize which assettypes to display
-use lessonsequence in learningmodel to derive order
-"card" concept for which types of assets
-hints in studyui


*DnD deck manager
-allow saving of active/discard back to server
-radio-button the selections.  only highlight one total.  not highlight one per column like it does now.
-Don't gray the before/after of the drop target
-break out static .css and .js


*Tests
-Add some tests!
-move getqa and impression into deck module.  test them with a dummy client.
-Black box tests of the whole service, including client
-Test that if I hit "No" over and over again, that I get the same cards back again before too long
-Test that if I hit "Kinda" on some cards, they come back after a while.
-Test that the XHR's from the js client work properly.  (rhino?)

